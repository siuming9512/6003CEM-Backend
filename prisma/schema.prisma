// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Pet {
  id                Int                       @id @default(autoincrement())
  variety           String
  gender            String
  age               Int
  imageFileName     String                    @default("")
  live              Boolean                   @default(true)
  userFavouritePets UserFavouritePetMapping[]
}

model User {
  id                String                    @id @default(uuid())
  username          String
  password          String?
  staffNo           String?
  userChatRooms     UserChatRoom[]
  userFavouritePets UserFavouritePetMapping[]
  userRole          UserRole[]
}

model UserRole {
  id     Int    @id @default(autoincrement())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  roleId String
  role   Role   @relation(fields: [roleId], references: [id])
}

model Role {
  id         String     @id @default(uuid())
  name       String
  userRole   UserRole[]
}

model UserFavouritePetMapping {
  userId String
  user   User   @relation(fields: [userId], references: [id])
  petId  Int
  pet    Pet    @relation(fields: [petId], references: [id])

  @@id([userId, petId])
}

model ChatRoom {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  lastChatTime  DateTime?
  chatMessages  ChatMessage[]
  userChatRooms UserChatRoom[]
}

model ChatMessage {
  id         Int      @id @default(autoincrement())
  chatRoomId Int
  message    String
  sendBy     String?
  createdAt  DateTime @default(now())
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
}

model UserChatRoom {
  chatRoomId Int      @id @default(autoincrement())
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}
